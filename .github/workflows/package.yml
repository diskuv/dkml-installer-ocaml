name: Package OCaml Releases

env:
  DEFAULT_DISKUV_OPAM_REPOSITORY_TAG: "479d3f42fe6b6078356a8ba50b8bc51184bb1499" # "v0.4.0-prerel13" when released
  PIN_OCAMLFIND: "1.9.1"
  PIN_OCAMLBUILD: "0.14.0"
on:
  workflow_dispatch:
    inputs:
      populate-cache:
        description: "Enable if downloads should occur but not builds. Falls back to a full build if not supported by Opam"
        required: false
        type: boolean
        default: false
      dkml-install-api:
        description: "Git branch, tag or commit for dkml-install, dkml-install-runner and dkml-package-console"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-compiler:
        description: "Git branch, tag or commit for dkml-base-compiler, conf-dkml-cross-toolchain and dkml-option-32bit"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-component-ocamlcompiler:
        description: "Git branch, tag or commit for dkml-component-*-ocamlcompiler and dkml-component-*-ocamlrun"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-component-curl:
        description: "Git branch, tag or commit for dkml-component-*-curl package"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-component-unixutils:
        description: "Git branch, tag or commit for dkml-component-*-unixutils packages"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      temp-ocaml:
        description: "Git branch, tag or commit for ocaml package temporarily in the dkml-component-ocamlcompiler repository"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      temp-ocaml-config:
        description: "Git branch, tag or commit for ocaml-config package temporarily in the dkml-component-ocamlcompiler repository"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      diskuv-opam-repository:
        # Used by all_setup_opam_repositories.sh
        description: "Git branch, tag or commit for the diskuv-opam-repository repository"
        required: false
        default: "" # DEFAULT_DISKUV_OPAM_REPOSITORY_TAG is used as default for empty strings
  push:
    branches:
      - 'main'

jobs:
  package:
    strategy:
      fail-fast: false
      matrix:
        # installer_name
        #   The suffix INSTALLER_NAME in dkml-installer-INSTALLER_NAME.ocaml
        # bootstrap-opam-version
        #   We need an old working Opam; see BOOTSTRAPPING.md.
        #   We use https://github.com/diskuv/dkml-installer-ocaml/releases
        #   to get an old one; you specify its version number here.
        #   Special value of 'os' means use the OS's package manager
        #   (yum/apt/brew).
        # opam-root
        #   We need a stable location for OPAMROOT even if the version of Opam
        #   changes (there are two versions: bootstrap and the compiled one).
        # vsstudio-dir
        #   Only needed if `os: windows-*`. The forward slashes must be double-
        #   slashed because it is passed to Opam setenv as an OCaml string.
        # vsstudio-vcvarsver
        #   Only needed if `os: windows-*`. The VERSION in
        #   `vsdevcmd.bat -vcvars_ver=VERSION`. Example: 14.26. See the output
        #   of the "Audit Visual Studio on Windows" step to see the supported
        #   versions (either xx.yy or xx.yy.zz should work).
        # vsstudio-winsdkver
        #   Only needed if `os: windows-*`. The VERSION in
        #   `vsdevcmd.bat -winsdk=VERSION`. Example: 10.0.18362.0. See the
        #   output of the "Audit Visual Studio on Windows" step to see the
        #   supported versions.
        # vsstudio-hostarch
        #   Only needed if `os: windows-*`. The ARCH in
        #   `vsdevcmd.bat -host_arch=ARCH`. Example: x64.
        #   If you have a 64-bit Intel machine you should not use x86 because
        #   _WIN64 will be defined (see https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=msvc-170)
        #   which is based on the host machine architecture (unless you explicitly
        #   cross-compile with different ARCHs; that is, -host_arch=x64 -arch=x75).
        #   Confer: https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170#use-the-developer-tools-in-an-existing-command-window
        #   If you see ppx problems with missing _BitScanForward64 then
        #   https://github.com/janestreet/base/blob/8993e35ba2e83e5020b2deb548253ef1e4a699d4/src/int_math_stubs.c#L25-L32
        #   has been compiled with the wrong host architecture.
        # vsstudio-arch
        #   Only needed if `os: windows-*`. The ARCH in
        #   `vsdevcmd.bat -arch=ARCH`. Example: x86.
        #   Confer: https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170#use-the-developer-tools-in-an-existing-command-window
        # dkml-options:
        #   Space separated list of `dkml-option-*` packages.
        #
        #   Use 32-bit installers when possible for maximum portability of
        #   OCaml bytecode. macos is only the major platform without 32-bit.
        #   You don't need to include `dkml-option-32bit` because it is auto
        #   chosen when the target ABI ends with x86.
        include:
          #   windows-latest will be windows-2022, which has untested VS2022
          - os: windows-2019
            installer_name: network-ocaml
            bootstrap-opam-version: "0.0.0"
            # The 32-bit Opam binary has some problems with
            # `Unix.create_process` giving:
            #   "create_process" failed on sleep: Bad file descriptor
            # So use 64-bit Opam binary
            opam-abi: windows_x86 #_64
            dkml-target-abi: windows_x86
            opam-root: D:/.opam
            vsstudio-dir: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise
            vsstudio-vcvarsver: "14.25"
            vsstudio-winsdkver: "10.0.18362.0"
            vsstudio-hostarch: x86
            vsstudio-arch: x86
          - os: ubuntu-latest
            installer_name: network-ocaml
            bootstrap-opam-version: "os"
            dkml-target-abi: linux_x86
            opam-root: /home/runner/.opam
          - os: macos-latest
            installer_name: network-ocaml
            bootstrap-opam-version: "os"
            dkml-target-abi: darwin_x86_64
            opam-root: /Users/runner/.opam
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.installer_name }}-${{ matrix.dkml-target-abi }}
    env:
      INSTALLERNAME: ${{ matrix.installer_name }}

      SHOULD_POPULATE_CACHE:  ${{ github.event.inputs.populate-cache }}
      # Although the user expressed desire to populate the cache, only
      # Opam 2.1 (?) and greater has the --download-only option. The OS
      # provided opam may not have the option.
      CAN_DOWNLOAD_ONLY:      ${{ matrix.bootstrap-opam-version != 'os' }}

      # When non-empty, instead of building the standard components from the
      # central Opam repository, use the github/gitlab development repositories
      # directly.
      TEMP_OCAML:                       "${{ github.event.inputs.temp-ocaml }}"
      TEMP_OCAML_CONFIG:                "${{ github.event.inputs.temp-ocaml-config }}"
      DISKUV_OPAM_REPOSITORY:           "${{ github.event.inputs.diskuv-opam-repository }}"
      # These are not independent of dkml-install-api; they reside in same
      # repository; we cannot go over max 10 GitHub workflow inputs.
      DKML_INSTALL:                     "${{ github.event.inputs.dkml-install-api }}"
      DKML_INSTALL_RUNNER:              "${{ github.event.inputs.dkml-install-api }}"
      DKML_PACKAGE_CONSOLE:             "${{ github.event.inputs.dkml-install-api }}"
      # These are not independent of dkml-component-curl; they reside in same
      # repository; we cannot go over max 10 GitHub workflow inputs.
      DKML_COMPONENT_STAGING_CURL:      "${{ github.event.inputs.dkml-component-curl }}"
      # These are not independent of dkml-component-enduser-ocamlcompiler; they reside in same
      # repository; we cannot go over max 10 GitHub workflow inputs.
      DKML_COMPONENT_STAGING_UNIXUTILS: "${{ github.event.inputs.dkml-component-enduser-unixutils }}"
      DKML_COMPONENT_NETWORK_UNIXUTILS: "${{ github.event.inputs.dkml-component-enduser-unixutils }}"
      DKML_COMPONENT_OFFLINE_UNIXUTILS: "${{ github.event.inputs.dkml-component-enduser-unixutils }}"
      # These are not independent of dkml-component-ocamlcompiler; they reside in same
      # repository; we cannot go over max 10 GitHub workflow inputs.
      DKML_COMPONENT_NETWORK_OCAMLCOMPILER: "${{ github.event.inputs.dkml-component-ocamlcompiler }}"
      DKML_COMPONENT_STAGING_OCAMLRUN:      "${{ github.event.inputs.dkml-component-ocamlcompiler }}"
      # These are not independent of dkml-compiler; they reside in same
      # repository; we cannot go over max 10 GitHub workflow inputs.
      CONF_DKML_CROSS_TOOLCHAIN:        "${{ github.event.inputs.dkml-compiler }}"
      DKML_OPTION_32BIT:                "${{ github.event.inputs.dkml-compiler }}"
      DKML_BASE_COMPILER:               "${{ github.event.inputs.dkml-compiler }}"

      # `>-` will flatten the multiple lines into a single line with no trailing EOL.
      # By design `populate-cache` is not part of the cache key
      CACHE_KEY_GITHUB_INPUTS: >-
        DKML_INSTALL=${{ github.event.inputs.dkml-api }}
        DKML_INSTALL_RUNNER=${{ github.event.inputs.dkml-install-api }}
        DKML_PACKAGE_CONSOLE=${{ github.event.inputs.dkml-install-api }}
        TEMP_OCAML=${{ github.event.inputs.temp-ocaml }}
        TEMP_OCAML_CONFIG=${{ github.event.inputs.temp-ocaml-config }}
        DISKUV_OPAM_REPOSITORY=${{ github.event.inputs.diskuv-opam-repository }}
        ALL_COMPONENT_CURL=${{ github.event.inputs.dkml-component-curl }}
        ALL_COMPONENT_UNIXUTILS=${{ github.event.inputs.dkml-component-unixutils }}
        ALL_COMPONENT_OCAMLCOMPILER=${{ github.event.inputs.dkml-component-ocamlcompiler }}
        ALL_COMPILER=${{ github.event.inputs.dkml-compiler }}

      OPAMROOT: ${{ matrix.opam-root }}
      VS_DIR: ${{ matrix.vsstudio-dir }}
      VS_ARCH: ${{ matrix.vsstudio-arch }}
      VS_HOST_ARCH: ${{ matrix.vsstudio-hostarch }}
      VS_VCVARSVER: ${{ matrix.vsstudio-vcvarsver }}
      VS_WINSDKVER: ${{ matrix.vsstudio-winsdkver }}
      # Use an M_ prefix so don't interfere with any internal DKML use
      M_DKMLOPTIONS: ${{ matrix.dkml-options }}
      M_DKMLTARGETABI: ${{ matrix.dkml-target-abi }}

      # Increase if you get `make inconsistent assumptions over interface Stdlib__format` errors
      # or if you otherwise need a fresh Opam root
      OPAM_ROOT_CACHE_NUMBER: 9

      # Remove warnings
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Audit Visual Studio on Windows
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: pwsh
        run: |
          & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -all -products *
          dir "$env:VS_DIR\VC\Tools\MSVC"
          dir "C:\Program Files (x86)\Windows Kits\10\include"

      # Install utilities
      #   tree: Nice for pretty-printing the final package tree
      #   wget: Needed for the Windows Opam download-command
      #   make: Needed for OCaml ./configure + make
      #   pkg-config: conf-pkg-config is used by many OCaml packages
      - name: Install Windows tools
        env:
          TREE_VER: 1.8.0-1
          WGET_VER: 1.21.2-1
          MAKE_VER: 4.3-3
          PKGCONFIG_VER: 0.29.2-3-any
          # libpcre2: Needed for wget
          LIBPCRE2_VER: 8-10.35-1
          # rsync: On Windows the `cp` fallback can fail; loosely related to
          #        https://github.com/ocaml/opam/issues/4080
          RSYNC_VER: 3.2.3-2
          # libzstd: Needed for rsync
          LIBZSTD_VER: 1.5.1-1
          # libxxhash: Needed for rsync
          LIBXXHASH_VER: 0.8.1-1          
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        run: .github/workflows/scripts/win32_install_tools.sh
      - name: Install Ubuntu tools
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: sudo env DEBIAN_FRONTEND="noninteractive" apt-get -q install -y --no-install-recommends tree
      - name: Install macOS tools
        if: ${{ startsWith(matrix.os, 'macos-') }}
        run: brew install tree

      # Requirements
      #   - gcc-/g++-multilib for 32bit option (depext from Opam should auto-install in dkml-option-32bit, but we
      #     need to be resilient to Opam version changes)
      #   - link.exe from MSYS2 shadows link.exe from MSVC
      - name: Install 32-bit Ubuntu requirements
        if: ${{ startsWith(matrix.os, 'ubuntu-') && endsWith(matrix.dkml-target-abi, 'x86') }}
        run: |
          sudo env DEBIAN_FRONTEND="noninteractive" apt-get update -y
          sudo env DEBIAN_FRONTEND="noninteractive" apt-get -q install -y --no-install-recommends gcc-multilib g++-multilib
      - name: Uninstall MSYS2 conflicting executables
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        run: rm -vf /usr/bin/link.exe

      # Bootstrap Opam (only necessary for INSTALLER_NAME=ocaml)

      #   Bootstrap from package manager
      - name: Bootstrap Opam from Ubuntu package manager
        if: ${{ startsWith(matrix.os, 'ubuntu-') && matrix.bootstrap-opam-version == 'os' }}
        run: sudo env DEBIAN_FRONTEND="noninteractive" apt-get -q install -y --no-install-recommends opam
      - name: Bootstrap Opam from macOS 'brew' package manager
        if: ${{ startsWith(matrix.os, 'macos-') && matrix.bootstrap-opam-version == 'os' }}
        run: brew install gpatch && brew install opam

      #   Bootstrap from historical release
      - name: Cache Opam bootstrap
        if: ${{ matrix.bootstrap-opam-version != 'os' }}
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 1
        with:
          path: bootstrap
          key:
            ${{ runner.os }}-bootstrap-${{ env.CACHE_NUMBER }}-${{ matrix.bootstrap-opam-version }}
      - name: Bootstrap Opam from historical release
        if: ${{ matrix.bootstrap-opam-version != 'os' }}
        shell: bash
        env:
          VER: ${{ matrix.bootstrap-opam-version }}
          ABI: ${{ matrix.opam-abi }}
        run: .github/workflows/scripts/all_bootstrap_opam_from_historical_release.sh

      # Build the installer

      - name: Cache Opam root
        uses: actions/cache@v2
        with:
          path: |
            ${{ matrix.opam-root }}/config
            ${{ matrix.opam-root }}/installer-${{ env.INSTALLERNAME }}
            ${{ matrix.opam-root }}/.ci.root-init
          key:
            ${{ runner.os }}-opamroot-${{ env.OPAM_ROOT_CACHE_NUMBER }}-${{
              matrix.bootstrap-opam-version }}-${{ matrix.opam-abi }}-${{
              env.DEFAULT_DISKUV_OPAM_REPOSITORY_TAG }}-${{ env.CACHE_KEY_GITHUB_INPUTS }}

      - name: Initialize Opam root
        env:
          ISWINDOWS: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        # Complicated Opam sequence is because:
        # 1. Opam's default curl does not work on Windows,
        #    and `opam init` does not provide a way to change it (TODO: need
        #    a PR!).
        # 2. We have to separate the Opam download cache from the other Opam
        #    caches
        run: .github/workflows/scripts/all_initialize_opam_root.sh

      - name: Cache Opam downloads and repositories
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 1
        with:
          path: |
            ${{ matrix.opam-root }}/repo
            ${{ matrix.opam-root }}/download-cache
            ${{ matrix.opam-root }}/.ci.repo-init
          key:
            ${{ runner.os }}-opamrepo-${{ env.OPAM_ROOT_CACHE_NUMBER }}-${{ env.CACHE_NUMBER }}

      # The action/checkout steps used for pinning will re-use existing Git objects
      # because of caching
      - name: Cache Git checkouts of Opam pins
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 1
        with:
          path: |
            ${{ matrix.opam-root }}/.ci/g
          key:
            ${{ runner.os }}-git-${{ env.CACHE_NUMBER }}

      - name: Setup Opam repositories
        shell: bash
        run: .github/workflows/scripts/all_setup_opam_repositories.sh

      - name: Create installer Opam switch
        shell: bash
        run: .github/workflows/scripts/all_create_installer_opam_switch.sh

      - name: Checkout dkml-component-staging-ocamlrun
        if: ${{ env.DKML_COMPONENT_STAGING_OCAMLRUN != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-ocamlcompiler
          ref: ${{ env.DKML_COMPONENT_STAGING_OCAMLRUN }}
          path: .ci/g/dkml-component-ocamlcompiler

      - name: Pin dkml-component-staging-ocamlrun to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_STAGING_OCAMLRUN != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-staging-ocamlrun .ci/g/dkml-component-ocamlcompiler

      - name: Checkout dkml-component-network-ocamlcompiler
        if: ${{ env.DKML_COMPONENT_NETWORK_OCAMLCOMPILER != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-ocamlcompiler
          path: .ci/g/dkml-component-network-ocamlcompiler
          ref: ${{ env.DKML_COMPONENT_NETWORK_OCAMLCOMPILER }}

      - name: Pin dkml-component-network-ocamlcompiler to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_NETWORK_OCAMLCOMPILER != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-network-ocamlcompiler .ci/g/dkml-component-network-ocamlcompiler

      - name: Checkout dkml-install
        if: ${{ env.DKML_INSTALL != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-install-api
          path: .ci/g/dkml-install
          ref: ${{ env.DKML_INSTALL }}

      - name: Pin dkml-install to checkout instead of Opam repository
        if: ${{ env.DKML_INSTALL != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-install .ci/g/dkml-install

      #  dkml-install-runner

      - name: Checkout dkml-install-runner
        if: ${{ env.DKML_INSTALL_RUNNER != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-install-api
          path: .ci/g/dkml-install-runner
          ref: ${{ env.DKML_INSTALL_RUNNER }}

      - name: Pin dkml-install-runner to checkout instead of Opam repository
        if: ${{ env.DKML_INSTALL_RUNNER != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-install-runner .ci/g/dkml-install-runner

      #  dkml-package-console
      
      - name: Checkout dkml-package-console
        if: ${{ env.DKML_PACKAGE_CONSOLE != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-install-api
          path: .ci/g/dkml-package-console
          ref: ${{ env.DKML_PACKAGE_CONSOLE }}

      - name: Pin dkml-package-console to checkout instead of Opam repository
        if: ${{ env.DKML_PACKAGE_CONSOLE != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-package-console .ci/g/dkml-package-console

      # dkml-base-compiler

      - name: Checkout dkml-base-compiler
        if: ${{ env.DKML_BASE_COMPILER != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-compiler
          path: .ci/g/dkml-base-compiler
          ref: ${{ env.DKML_BASE_COMPILER }}

      - name: Pin dkml-base-compiler to checkout instead of Opam repository
        if: ${{ env.DKML_BASE_COMPILER != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-base-compiler .ci/g/dkml-base-compiler

      - name: Checkout conf-dkml-cross-toolchain
        if: ${{ env.CONF_DKML_CROSS_TOOLCHAIN != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/conf-dkml-cross-toolchain
          path: .ci/g/conf-dkml-cross-toolchain
          ref: ${{ env.CONF_DKML_CROSS_TOOLCHAIN }}

      - name: Pin conf-dkml-cross-toolchain to checkout instead of Opam repository
        if: ${{ env.CONF_DKML_CROSS_TOOLCHAIN != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action conf-dkml-cross-toolchain .ci/g/conf-dkml-cross-toolchain

      - name: Checkout ocaml
        if: ${{ env.TEMP_OCAML != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-compiler
          path: .ci/g/ocaml
          ref: ${{ env.TEMP_OCAML }}

      - name: Pin ocaml.4.12.1 to checkout instead of Opam repository
        if: ${{ env.TEMP_OCAML != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action ocaml.4.12.1 .ci/g/ocaml

      - name: Checkout ocaml-config
        if: ${{ env.TEMP_OCAML_CONFIG != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-compiler
          path: .ci/g/ocaml-config
          ref: ${{ env.TEMP_OCAML_CONFIG }}

      - name: Pin ocaml-config.2 to checkout instead of Opam repository
        if: ${{ env.TEMP_OCAML_CONFIG != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action ocaml-config.2 .ci/g/ocaml-config

      - name: Checkout dkml-option-32bit
        if: ${{ env.DKML_OPTION_32BIT != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-compiler
          path: .ci/g/dkml-option-32bit
          ref: ${{ env.DKML_OPTION_32BIT }}

      - name: Pin dkml-option-32bit to checkout instead of Opam repository
        if: ${{ env.DKML_OPTION_32BIT != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-option-32bit .ci/g/dkml-option-32bit

      - name: Checkout dkml-component-staging-curl
        if: ${{ env.DKML_COMPONENT_STAGING_CURL != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-curl
          path: .ci/g/dkml-component-staging-curl
          ref: ${{ env.DKML_COMPONENT_STAGING_CURL }}

      - name: Pin dkml-component-staging-curl to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_STAGING_CURL != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-staging-curl .ci/g/dkml-component-staging-curl

      - name: Checkout dkml-component-staging-unixutils
        if: ${{ env.DKML_COMPONENT_STAGING_UNIXUTILS != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-unixutils
          path: .ci/g/dkml-component-staging-unixutils
          ref: ${{ env.DKML_COMPONENT_STAGING_UNIXUTILS }}

      - name: Pin dkml-component-staging-unixutils to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_STAGING_UNIXUTILS != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-staging-unixutils .ci/g/dkml-component-staging-unixutils

      - name: Checkout dkml-component-network-unixutils
        if: ${{ env.DKML_COMPONENT_NETWORK_UNIXUTILS != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-unixutils
          path: .ci/g/dkml-component-network-unixutils
          ref: ${{ env.DKML_COMPONENT_NETWORK_UNIXUTILS }}

      - name: Pin dkml-component-network-unixutils to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_NETWORK_UNIXUTILS != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-network-unixutils .ci/g/dkml-component-network-unixutils

      # dkml-component-offline-unixutils

      - name: Checkout dkml-component-offline-unixutils
        if: ${{ env.DKML_COMPONENT_OFFLINE_UNIXUTILS != '@repository@' }}
        uses: actions/checkout@v2
        with:
          repository: diskuv/dkml-component-unixutils
          path: .ci/g/dkml-component-offline-unixutils
          ref: ${{ env.DKML_COMPONENT_OFFLINE_UNIXUTILS }}

      - name: Pin dkml-component-offline-unixutils to checkout instead of Opam repository
        if: ${{ env.DKML_COMPONENT_OFFLINE_UNIXUTILS != '@repository@' }}
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-offline-unixutils .ci/g/dkml-component-offline-unixutils

      # ocamlfind and ocamlbuild have patches necessary for Windows in diskuv-opam-repository

      - name: Pin ocamlfind ${{ env.PIN_OCAMLFIND }}, ocamlbuild ${{ env.PIN_OCAMLBUILD }}
        shell: bash
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          opam pin add --yes --no-action -k version ocamlfind ${{ env.PIN_OCAMLFIND }}
          opam pin add --yes --no-action -k version ocamlbuild ${{ env.PIN_OCAMLBUILD }}

      # diskuvbox is not yet available in Opam repository

      - name: Pin diskuvbox
        shell: bash
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action diskuvbox 'https://github.com/diskuv/diskuvbox.git#main'

      # Configuration ...

      - name: Use Visual Studio in DKML Opam packages
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        # nit: Perhaps more of these VS_ values should come from `matrix`.
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          opam option setenv= # reset
          opam option setenv+='DKML_COMPILE_SPEC = "1"'
          opam option setenv+='DKML_COMPILE_TYPE = "VS"'
          opam option setenv+="DKML_COMPILE_VS_DIR = \"$VS_DIR\""
          opam option setenv+="DKML_COMPILE_VS_VCVARSVER = \"$VS_VCVARSVER\""
          opam option setenv+="DKML_COMPILE_VS_WINSDKVER = \"$VS_WINSDKVER\""
          opam option setenv+='DKML_COMPILE_VS_MSVSPREFERENCE = "VS16.6"'
          opam option setenv+='DKML_COMPILE_VS_CMAKEGENERATOR = "Visual Studio 16 2019"'
          opam option setenv+="DKML_HOST_ABI = \"$M_DKMLTARGETABI\""
          opam option setenv # print

      - name: Build installer for Windows
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: cmd
        timeout-minutes: 60
        env:
          VSCMD_SKIP_SENDTELEMETRY: 1
          # Use env vars to communicate to crossplatform-functions.sh and
          # anybody else with a Unix detection probe
          # that a Unix environment is available (MSYS2 from Git Bash)
          MSYSTEM: MINGW64
          MSYSTEM_CARCH: x86_64
          MSYSTEM_CHOST: x86_64-w64-mingw32
          MSYSTEM_PREFIX: /mingw64
        run: .github/workflows/scripts/win32_build_installer.cmd

      - name: Build installer for non-Windows
        if: ${{ !startsWith(matrix.os, 'windows-') }}
        shell: bash
        timeout-minutes: 60
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          case "$M_DKMLTARGETABI" in
            *_x86) M_DKMLOPTION_32BIT=dkml-option-32bit ;;
            *)     M_DKMLOPTION_32BIT= ;;
          esac
          if [ "$SHOULD_POPULATE_CACHE" = true ] && [ "$CAN_DOWNLOAD_ONLY" = true ]; then
            env OPAMDOWNLOADJOBS=1 opam install --yes --switch installer-$INSTALLERNAME $M_DKMLOPTIONS $M_DKMLOPTION_32BIT ./dkml-installer-$INSTALLERNAME.opam --download-only
          else
            opam install --yes --switch installer-$INSTALLERNAME $M_DKMLOPTIONS $M_DKMLOPTION_32BIT ./dkml-installer-$INSTALLERNAME.opam
          fi

      # Examine the Opam package
      - name: Examine the installer
        shell: bash
        run: S=$(PATH="$PWD/bootstrap/bin:$PATH" opam var share) ; if [ -e "$S" ]; then if [ -x /usr/bin/tree ]; then tree -F -I src "$S"; else find "$S" -name src -prune -o -type f -print; fi; fi
