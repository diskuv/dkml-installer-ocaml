name: Package OCaml Releases

env:
  DEFAULT_DISKUV_OPAM_REPOSITORY_TAG: "v0.4.0-prerel3"
  PIN_OCAMLFIND: "1.9.1"

on:
  workflow_dispatch:
    inputs:
      dkml-component-ocamlrun:
        description: "Git branch, tag or commit for ocamlrun component"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-component-ocamlcompiler:
        description: "Git branch, tag or commit for ocamlcompiler component"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-install:
        description: "Git branch, tag or commit for dkml-install package"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-install-runner:
        description: "Git branch, tag or commit for dkml-install-runner package"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-base-compiler:
        description: "Git branch, tag or commit for dkml-base-compiler package"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      dkml-option-32bit:
        description: "Git branch, tag or commit for dkml-option-32bit package"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      temp-ocaml:
        description: "Git branch, tag or commit for ocaml package temporarily in the dkml-component-ocamlcompiler repository"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      temp-ocaml-config:
        description: "Git branch, tag or commit for ocaml-config package temporarily in the dkml-component-ocamlcompiler repository"
        required: false
        default: "" # Change this to "@repository@" once published to Opam
      diskuv-opam-repository:
        description: "Git branch, tag or commit for ocaml-config package temporarily in the diskuv-opam-repository repository"
        required: false
        default: "" # DEFAULT_DISKUV_OPAM_REPOSITORY_TAG is used as default for empty strings
  push:
    branches:
      - 'main'

jobs:
  package:
    env:
      INSTALLERNAME: ocaml

      # When non-empty, instead of building the standard components from the
      # central Opam repository, use the github/gitlab development repositories
      # directly.
      DKML_COMPONENT_OCAMLRUN:      "${{ github.event.inputs.dkml-component-ocamlrun }}"
      DKML_COMPONENT_OCAMLCOMPILER: "${{ github.event.inputs.dkml-component-ocamcompiler }}"
      DKML_INSTALL:                 "${{ github.event.inputs.dkml-install }}"
      DKML_INSTALL_RUNNER:          "${{ github.event.inputs.dkml-install-runner }}"
      DKML_BASE_COMPILER:           "${{ github.event.inputs.dkml-base-compiler }}"
      TEMP_OCAML:                   "${{ github.event.inputs.temp-ocaml }}"
      TEMP_OCAML_CONFIG:            "${{ github.event.inputs.temp-ocaml-config }}"
      DKML_OPTION_32BIT:            "${{ github.event.inputs.dkml-option-32bit }}"
      DISKUV_OPAM_REPOSITORY:       "${{ github.event.inputs.diskuv-opam-repository }}"

      # `>-` will flatten the multiple lines into a single line with no trailing EOL
      CACHE_KEY_GITHUB_INPUTS: >-
        DKML_COMPONENT_OCAMLRUN=${{ github.event.inputs.dkml-component-ocamlrun }}
        DKML_COMPONENT_OCAMLCOMPILER=${{ github.event.inputs.dkml-component-ocamcompiler }}
        DKML_INSTALL=${{ github.event.inputs.dkml-install }}
        DKML_INSTALL_RUNNER=${{ github.event.inputs.dkml-install-runner }}
        DKML_BASE_COMPILER=${{ github.event.inputs.dkml-base-compiler }}
        TEMP_OCAML=${{ github.event.inputs.temp-ocaml }}
        TEMP_OCAML_CONFIG=${{ github.event.inputs.temp-ocaml-config }}
        DKML_OPTION_32BIT=${{ github.event.inputs.dkml-option-32bit }}
        DISKUV_OPAM_REPOSITORY=${{ github.event.inputs.diskuv-opam-repository }}

      # Remove warnings
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    strategy:
      fail-fast: true
      matrix:
        # bootstrap-opam-version
        #   We need an old working Opam; see BOOTSTRAPPING.md.
        #   We use https://github.com/diskuv/dkml-installer-ocaml/releases
        #   to get an old one; you specify its version number here.
        #   Special value of 'os' means use the OS's package manager
        #   (yum/apt/brew).
        # opam-root
        #   We need a stable location for OPAMROOT even if the version of Opam
        #   changes (there are two versions: bootstrap and the compiled one).
        # vsstudio-dir
        #   Only needed if `os: windows-*`. The forward slashes must be double-
        #   slashed because it is passed to Opam setenv as an OCaml string.
        # vsstudio-vcvarsver
        #   Only needed if `os: windows-*`. The VERSION in
        #   `vsdevcmd.bat -vcvars_ver=VERSION`. Example: 14.26. See the output
        #   of the "Audit Visual Studio on Windows" step to see the supported
        #   versions (either xx.yy or xx.yy.zz should work).
        include:
          - os: windows-2019
            # windows-latest will be windows-2022, which has untested VS2022
            bootstrap-opam-version: "0.0.0"
            dkml-target-abi: windows_x86
            opam-root: D:/.opam
            vsstudio-dir: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise
            vsstudio-vcvarsver: "14.25"
          - os: ubuntu-latest
            bootstrap-opam-version: "os"
            dkml-target-abi: linux_x86
            opam-root: /home/runner/.opam
          - os: macos-latest
            bootstrap-opam-version: "os"
            dkml-target-abi: darwin_x86_64
            opam-root: /Users/runner/.opam
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.dkml-target-abi }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Audit Visual Studio on Windows
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: pwsh
        env:
          VS_DIR: ${{ matrix.vsstudio-dir }}
        run: |
          & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -all -products *
          dir $env:VS_DIR\VC\Tools\MSVC

      # Install utilities
      #   tree: Nice for pretty-printing the final package tree
      #   wget: Needed for the Windows Opam download-command
      #   make: Needed for OCaml ./configure + make
      - name: Install Windows tools
        env:
          TREE_VER: 1.8.0-1
          WGET_VER: 1.21.2-1
          MAKE_VER: 4.3-3
          # libpcre2: Needed for wget
          LIBPCRE2_VER: 8-10.35-1
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        run: |
          untarxz() {
            prefix=$1; shift
            ver=$1; shift
            curl -L -o $prefix$ver-x86_64.pkg.tar.xz http://repo.msys2.org/msys/x86_64/$prefix$ver-x86_64.pkg.tar.xz
            tar xfCJ $prefix$ver-x86_64.pkg.tar.xz /
            rm -f $prefix$ver-x86_64.pkg.tar.xz
          }
          untarzst() {
            prefix=$1; shift
            ver=$1; shift
            curl -L -o $prefix$ver-x86_64.pkg.tar.zst http://repo.msys2.org/msys/x86_64/$prefix$ver-x86_64.pkg.tar.zst
            tar xfC $prefix$ver-x86_64.pkg.tar.zst / --use-compress-program='zstd -d'
            rm -f $prefix$ver-x86_64.pkg.tar.zst
          }
          untarxz tree- "$TREE_VER"
          untarzst wget- "$WGET_VER"
          untarzst libpcre2_ "$LIBPCRE2_VER"
          untarzst make- "$MAKE_VER"
      - name: Install Ubuntu tools
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: sudo env DEBIAN_FRONTEND="noninteractive" apt-get -q install -y --no-install-recommends tree
      - name: Install macOS tools
        if: ${{ startsWith(matrix.os, 'macos-') }}
        run: brew install tree

      # Bootstrap Opam (only necessary for INSTALLER_NAME=ocaml)

      #   Bootstrap from package manager
      - name: Bootstrap Opam from Ubuntu package manager
        if: ${{ startsWith(matrix.os, 'ubuntu-') && matrix.bootstrap-opam-version == 'os' }}
        run: sudo env DEBIAN_FRONTEND="noninteractive" apt-get -q install -y --no-install-recommends opam
      - name: Bootstrap Opam from macOS 'brew' package manager
        if: ${{ startsWith(matrix.os, 'macos-') && matrix.bootstrap-opam-version == 'os' }}
        run: brew install gpatch && brew install opam

      #   Bootstrap from historical release
      - name: Cache Opam bootstrap
        if: ${{ matrix.bootstrap-opam-version != 'os' }}
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 1
        with:
          path: bootstrap
          key:
            ${{ runner.os }}-bootstrap-${{ env.CACHE_NUMBER }}-${{ matrix.bootstrap-opam-version }}
      - name: Bootstrap Opam from historical release
        if: ${{ matrix.bootstrap-opam-version != 'os' }}
        shell: bash
        env:
          ABI: ${{ matrix.dkml-target-abi }}
          VER: ${{ matrix.bootstrap-opam-version }}
        run: |
          install -d bootstrap
          cd bootstrap
          if [ ! -e ocaml-$ABI-$VER.tar.gz ]; then
            curl -L -o ocaml-$ABI-$VER.tmp.tar.gz https://github.com/diskuv/dkml-installer-ocaml/releases/download/v$VER/ocaml-$ABI-$VER.tar.gz
            mv ocaml-$ABI-$VER.tmp.tar.gz ocaml-$ABI-$VER.tar.gz
          fi
          if [ ! -e bin/opam ] && [ ! -e bin/opam.exe ]; then
            tar xfz ocaml-$ABI-$VER.tar.gz --strip-components=1
          fi

      # Build the installer

      - name: Cache Opam root
        uses: actions/cache@v2
        env:
          # Increase if you get `make inconsistent assumptions over interface Stdlib__format` errors
          # or if you otherwise need a fresh Opam root
          CACHE_NUMBER: 4
        with:
          path: |
            ${{ matrix.opam-root }}/download-cache
            ${{ matrix.opam-root }}/repo
            ${{ matrix.opam-root }}/config
            ${{ matrix.opam-root }}/installer-${{ env.INSTALLERNAME }}
          key:
            ${{ runner.os }}-bootstrap-${{ env.CACHE_NUMBER }}-${{
              matrix.bootstrap-opam-version }}-${{ env.DEFAULT_DISKUV_OPAM_REPOSITORY_TAG }}-${{ env.CACHE_KEY_GITHUB_INPUTS }}

      - name: Initialize Opam root for Windows
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
        # Bizarre sequence is because Opam's default curl does not work on Windows,
        # and `opam init` does not provide a way to change it (TODO: need a PR!).
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          set "-x"
          if [ ! -e "$OPAMROOT/config" ]; then
            rm -rf "$OPAMROOT" # Clear any partial previous attempt
            opam init --disable-sandboxing --no-setup --kind local --bare "$(cygpath -am windows/empty-opam-repository)"
            opam option --yes --global download-command=wget
            opam repository list --all
            opam repository remove default --yes --all --dont-select
            opam repository add default https://opam.ocaml.org --yes --dont-select
            opam repository add diskuv "git+https://github.com/diskuv/diskuv-opam-repository.git#${DISKUV_OPAM_REPOSITORY:-$DEFAULT_DISKUV_OPAM_REPOSITORY_TAG}" --yes --dont-select
          fi

      - name: Initialize Opam root for non-Windows
        if: ${{ !startsWith(matrix.os, 'windows-') }}
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          set "-x"
          if [ ! -e "$OPAMROOT/config" ]; then
            opam init --bare --disable-sandboxing --no-setup
            opam repository add diskuv "git+https://github.com/diskuv/diskuv-opam-repository.git#${DISKUV_OPAM_REPOSITORY:-$DEFAULT_DISKUV_OPAM_REPOSITORY_TAG}" --yes --dont-select
          fi

      - name: Create installer Opam switch
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
        run: '[ -d "$OPAMROOT/installer-$INSTALLERNAME/.opam-switch" ] || PATH="$PWD/bootstrap/bin:$PATH" opam switch create installer-$INSTALLERNAME --repos default,diskuv --empty'

      - name: Pin dkml-component-ocamlrun to source instead of Opam repository
        if: ${{ env.DKML_COMPONENT_OCAMLRUN != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-ocamlrun "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${DKML_COMPONENT_OCAMLRUN:-main}"

      - name: Pin dkml-component-ocamlcompiler to source instead of Opam repository
        if: ${{ env.DKML_COMPONENT_OCAMLCOMPILER != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-component-ocamlcompiler "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${DKML_COMPONENT_OCAMLCOMPILER:-main}"

      - name: Pin dkml-install to source instead of Opam repository
        if: ${{ env.DKML_INSTALL != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-install "git://github.com/diskuv/dkml-install-api.git#${DKML_INSTALL:-main}"

      - name: Pin dkml-install-runner to source instead of Opam repository
        if: ${{ env.DKML_INSTALL_RUNNER != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-install-runner "git://github.com/diskuv/dkml-install-api.git#${DKML_INSTALL_RUNNER:-main}"

      - name: Pin dkml-base-compiler to source instead of Opam repository
        if: ${{ env.DKML_BASE_COMPILER != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-base-compiler "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${DKML_BASE_COMPILER:-main}"

      - name: (Temporary) Pin ocaml.4.12.1 to source instead of Opam repository
        if: ${{ env.TEMP_OCAML != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action ocaml.4.12.1 "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${TEMP_OCAML:-main}"

      - name: (Temporary) Pin ocaml-config.2 to source instead of Opam repository
        if: ${{ env.TEMP_OCAML_CONFIG != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action ocaml-config.2 "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${TEMP_OCAML_CONFIG:-main}"

      - name: Pin dkml-option-32bit to source instead of Opam repository
        if: ${{ env.DKML_OPTION_32BIT != '@repository@' }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action dkml-option-32bit "git://github.com/diskuv/dkml-component-ocamlcompiler.git#${DKML_OPTION_32BIT:-main}"

      # ocamlfind has a patch in diskuv-opam-repository
      - name: Pin ocamlfind to ${{ env.PIN_OCAMLFIND }}
        shell: bash
        env: { "OPAMROOT": "${{ matrix.opam-root }}" }
        run: PATH="$PWD/bootstrap/bin:$PATH" opam pin add --yes --no-action -k version ocamlfind ${{ env.PIN_OCAMLFIND }}

      - name: Use Visual Studio in DKML Opam packages
        if: ${{ startsWith(matrix.os, 'windows-') }}
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
          VS_DIR: ${{ matrix.vsstudio-dir }}
          VS_VCVARSVER: ${{ matrix.vsstudio-vcvarsver }}
          TARGET_ABI: ${{ matrix.dkml-target-abi }}
        # nit: Perhaps more of these VS_ values should come from `matrix`.
        run: |
          PATH="$PWD/bootstrap/bin:$PATH"
          opam option setenv= # reset
          opam option setenv+='DKML_COMPILE_SPEC = "1"'
          opam option setenv+='DKML_COMPILE_TYPE = "VS"'
          opam option setenv+="DKML_COMPILE_VS_DIR = \"$VS_DIR\""
          opam option setenv+="DKML_COMPILE_VS_VCVARSVER = \"$VS_VCVARSVER\""
          opam option setenv+='DKML_COMPILE_VS_WINSDKVER = "10.0.18362.0"'
          opam option setenv+='DKML_COMPILE_VS_MSVSPREFERENCE = "VS16.6"'
          opam option setenv+='DKML_COMPILE_VS_CMAKEGENERATOR = "Visual Studio 16 2019"'
          opam option setenv+="DKML_HOST_ABI = \"$TARGET_ABI\""
          opam option setenv # print

      - name: Build installer
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
        run: PATH="$PWD/bootstrap/bin:$PATH" opam install --yes --switch installer-$INSTALLERNAME ./dkml-installer-$INSTALLERNAME.opam --verbose

      # Examine the Opam package
      - name: Examine the installer
        shell: bash
        env:
          OPAMROOT: ${{ matrix.opam-root }}
        run: S=$(PATH="$PWD/bootstrap/bin:$PATH" opam var share) ; if [ -e "$S" ]; then if [ -x /usr/bin/tree ]; then tree "$S"; else find "$S"; fi; fi
